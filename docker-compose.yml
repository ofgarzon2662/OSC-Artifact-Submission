version: '3.8'

networks:
  # Connect to the existing API services network
  osc-api-services-network:
    external: true
    name: osc-api-services-network

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: osc-artifact-rabbitmq
    ports:
      - "5672:5672"  # AMQP port
      - "15672:15672"  # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
      - RABBITMQ_LOAD_DEFINITIONS=/etc/rabbitmq/definitions.json
    volumes:
      - ./broker/definitions.json:/etc/rabbitmq/definitions.json
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - osc-api-services-network

  submission_listener:
    build:
      context: ./submission_listener
    container_name: osc-artifact-submission-listener
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE}
      - API_GATEWAY_URL=${API_GATEWAY_URL}
      - API_KEY=${SUBMISSION_LISTENER_API_KEY}
      - SERVICE_ROLE=${SUBMISSION_LISTENER_SERVICE_ROLE}
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - osc-api-services-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    ports:
      - "${HEALTH_CHECK_PORT:-8000}:8000"  # Health check port 