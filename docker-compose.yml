version: '3.8'

networks:
  # Connect to the existing API services network
  osc-api-services-network:
    external: true
    name: osc-api-services-network

services:
  # RabbitMQ Message Broker with custom configuration
  rabbitmq:
    build:
      context: ./broker
      dockerfile: Dockerfile
    container_name: osc-artifact-rabbitmq
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"  # AMQP port
      - "15672:15672"  # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - osc-api-services-network
    restart: unless-stopped

  # Submission Listener
  submission_listener:
    build:
      context: ./submission_listener
      dockerfile: Dockerfile
    container_name: osc-artifact-submission-listener
    environment:
      # RabbitMQ Configuration
      RABBITMQ_HOST: ${RABBITMQ_HOST:-rabbitmq}
      RABBITMQ_PORT: ${RABBITMQ_PORT:-5672}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      RABBITMQ_QUEUE_SUBMITTED: ${RABBITMQ_QUEUE_SUBMITTED}
      
      # API Gateway Configuration
      API_GATEWAY_URL: ${API_GATEWAY_URL}
      SUBMISSION_LISTENER_API_KEY: ${SUBMISSION_LISTENER_API_KEY}
      SUBMISSION_LISTENER_SERVICE_ROLE: ${SUBMISSION_LISTENER_SERVICE_ROLE}
      
      # Environment
      ENVIRONMENT: docker
    ports:
      - "${HEALTH_CHECK_PORT:-8000}:8000"  # Health check port
    networks:
      - osc-api-services-network
    depends_on:
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped 